//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Test.wscesfm {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="wscesfm.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getAdmin", ReplyAction="http://tempuri.org/IService1/getAdminResponse")]
        string getAdmin();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getAdmin", ReplyAction="http://tempuri.org/IService1/getAdminResponse")]
        System.Threading.Tasks.Task<string> getAdminAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getAdminId", ReplyAction="http://tempuri.org/IService1/getAdminIdResponse")]
        string getAdminId(int idAdmin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getAdminId", ReplyAction="http://tempuri.org/IService1/getAdminIdResponse")]
        System.Threading.Tasks.Task<string> getAdminIdAsync(int idAdmin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getControlStock", ReplyAction="http://tempuri.org/IService1/getControlStockResponse")]
        string getControlStock();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getControlStock", ReplyAction="http://tempuri.org/IService1/getControlStockResponse")]
        System.Threading.Tasks.Task<string> getControlStockAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getControlStockId", ReplyAction="http://tempuri.org/IService1/getControlStockIdResponse")]
        string getControlStockId(int idControl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getControlStockId", ReplyAction="http://tempuri.org/IService1/getControlStockIdResponse")]
        System.Threading.Tasks.Task<string> getControlStockIdAsync(int idControl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getDetForm", ReplyAction="http://tempuri.org/IService1/getDetFormResponse")]
        string getDetForm();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getDetForm", ReplyAction="http://tempuri.org/IService1/getDetFormResponse")]
        System.Threading.Tasks.Task<string> getDetFormAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getDetFormId", ReplyAction="http://tempuri.org/IService1/getDetFormIdResponse")]
        string getDetFormId(int idFormulario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getDetFormId", ReplyAction="http://tempuri.org/IService1/getDetFormIdResponse")]
        System.Threading.Tasks.Task<string> getDetFormIdAsync(int idFormulario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getFormMedicamentos", ReplyAction="http://tempuri.org/IService1/getFormMedicamentosResponse")]
        string getFormMedicamentos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getFormMedicamentos", ReplyAction="http://tempuri.org/IService1/getFormMedicamentosResponse")]
        System.Threading.Tasks.Task<string> getFormMedicamentosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getFormMedicamentosId", ReplyAction="http://tempuri.org/IService1/getFormMedicamentosIdResponse")]
        string getFormMedicamentosId(int idForm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getFormMedicamentosId", ReplyAction="http://tempuri.org/IService1/getFormMedicamentosIdResponse")]
        System.Threading.Tasks.Task<string> getFormMedicamentosIdAsync(int idForm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getLaboratorio", ReplyAction="http://tempuri.org/IService1/getLaboratorioResponse")]
        string getLaboratorio();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getLaboratorio", ReplyAction="http://tempuri.org/IService1/getLaboratorioResponse")]
        System.Threading.Tasks.Task<string> getLaboratorioAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getLaboratorioId", ReplyAction="http://tempuri.org/IService1/getLaboratorioIdResponse")]
        string getLaboratorioId(int idLaboratorio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getLaboratorioId", ReplyAction="http://tempuri.org/IService1/getLaboratorioIdResponse")]
        System.Threading.Tasks.Task<string> getLaboratorioIdAsync(int idLaboratorio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getMedicamentos", ReplyAction="http://tempuri.org/IService1/getMedicamentosResponse")]
        string getMedicamentos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getMedicamentos", ReplyAction="http://tempuri.org/IService1/getMedicamentosResponse")]
        System.Threading.Tasks.Task<string> getMedicamentosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getMedicamentosId", ReplyAction="http://tempuri.org/IService1/getMedicamentosIdResponse")]
        string getMedicamentosId(string idMedicamento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getMedicamentosId", ReplyAction="http://tempuri.org/IService1/getMedicamentosIdResponse")]
        System.Threading.Tasks.Task<string> getMedicamentosIdAsync(string idMedicamento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getMedico", ReplyAction="http://tempuri.org/IService1/getMedicoResponse")]
        string getMedico();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getMedico", ReplyAction="http://tempuri.org/IService1/getMedicoResponse")]
        System.Threading.Tasks.Task<string> getMedicoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getMedicoRut", ReplyAction="http://tempuri.org/IService1/getMedicoRutResponse")]
        string getMedicoRut(string rutUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getMedicoRut", ReplyAction="http://tempuri.org/IService1/getMedicoRutResponse")]
        System.Threading.Tasks.Task<string> getMedicoRutAsync(string rutUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getMovimientosMed", ReplyAction="http://tempuri.org/IService1/getMovimientosMedResponse")]
        string getMovimientosMed();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getMovimientosMed", ReplyAction="http://tempuri.org/IService1/getMovimientosMedResponse")]
        System.Threading.Tasks.Task<string> getMovimientosMedAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getMovimientosMedId", ReplyAction="http://tempuri.org/IService1/getMovimientosMedIdResponse")]
        string getMovimientosMedId(int idMovimiento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getMovimientosMedId", ReplyAction="http://tempuri.org/IService1/getMovimientosMedIdResponse")]
        System.Threading.Tasks.Task<string> getMovimientosMedIdAsync(int idMovimiento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getPaciente", ReplyAction="http://tempuri.org/IService1/getPacienteResponse")]
        string getPaciente();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getPaciente", ReplyAction="http://tempuri.org/IService1/getPacienteResponse")]
        System.Threading.Tasks.Task<string> getPacienteAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getPacienteRut", ReplyAction="http://tempuri.org/IService1/getPacienteRutResponse")]
        string getPacienteRut(string rutPaciente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getPacienteRut", ReplyAction="http://tempuri.org/IService1/getPacienteRutResponse")]
        System.Threading.Tasks.Task<string> getPacienteRutAsync(string rutPaciente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getTipoMedicamento", ReplyAction="http://tempuri.org/IService1/getTipoMedicamentoResponse")]
        string getTipoMedicamento();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getTipoMedicamento", ReplyAction="http://tempuri.org/IService1/getTipoMedicamentoResponse")]
        System.Threading.Tasks.Task<string> getTipoMedicamentoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getTipoMedicamentoId", ReplyAction="http://tempuri.org/IService1/getTipoMedicamentoIdResponse")]
        string getTipoMedicamentoId(int idTipoMed);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getTipoMedicamentoId", ReplyAction="http://tempuri.org/IService1/getTipoMedicamentoIdResponse")]
        System.Threading.Tasks.Task<string> getTipoMedicamentoIdAsync(int idTipoMed);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getTipoMovimiento", ReplyAction="http://tempuri.org/IService1/getTipoMovimientoResponse")]
        string getTipoMovimiento();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getTipoMovimiento", ReplyAction="http://tempuri.org/IService1/getTipoMovimientoResponse")]
        System.Threading.Tasks.Task<string> getTipoMovimientoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getTipoMovimientoId", ReplyAction="http://tempuri.org/IService1/getTipoMovimientoIdResponse")]
        string getTipoMovimientoId(int idMoviento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getTipoMovimientoId", ReplyAction="http://tempuri.org/IService1/getTipoMovimientoIdResponse")]
        System.Threading.Tasks.Task<string> getTipoMovimientoIdAsync(int idMoviento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getTutor", ReplyAction="http://tempuri.org/IService1/getTutorResponse")]
        string getTutor();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getTutor", ReplyAction="http://tempuri.org/IService1/getTutorResponse")]
        System.Threading.Tasks.Task<string> getTutorAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getTutorRut", ReplyAction="http://tempuri.org/IService1/getTutorRutResponse")]
        string getTutorRut(string rutTutor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getTutorRut", ReplyAction="http://tempuri.org/IService1/getTutorRutResponse")]
        System.Threading.Tasks.Task<string> getTutorRutAsync(string rutTutor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getUnidadMedida", ReplyAction="http://tempuri.org/IService1/getUnidadMedidaResponse")]
        string getUnidadMedida();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getUnidadMedida", ReplyAction="http://tempuri.org/IService1/getUnidadMedidaResponse")]
        System.Threading.Tasks.Task<string> getUnidadMedidaAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getUnidadMedidaId", ReplyAction="http://tempuri.org/IService1/getUnidadMedidaIdResponse")]
        string getUnidadMedidaId(int idUnidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getUnidadMedidaId", ReplyAction="http://tempuri.org/IService1/getUnidadMedidaIdResponse")]
        System.Threading.Tasks.Task<string> getUnidadMedidaIdAsync(int idUnidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getUsuario", ReplyAction="http://tempuri.org/IService1/getUsuarioResponse")]
        string getUsuario();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getUsuario", ReplyAction="http://tempuri.org/IService1/getUsuarioResponse")]
        System.Threading.Tasks.Task<string> getUsuarioAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getUsuarioRut", ReplyAction="http://tempuri.org/IService1/getUsuarioRutResponse")]
        string getUsuarioRut(string rutUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getUsuarioRut", ReplyAction="http://tempuri.org/IService1/getUsuarioRutResponse")]
        System.Threading.Tasks.Task<string> getUsuarioRutAsync(string rutUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdtAdmin", ReplyAction="http://tempuri.org/IService1/UpdtAdminResponse")]
        void UpdtAdmin(int Id_Admin, string Cargo, string Privilegio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdtAdmin", ReplyAction="http://tempuri.org/IService1/UpdtAdminResponse")]
        System.Threading.Tasks.Task UpdtAdminAsync(int Id_Admin, string Cargo, string Privilegio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdtControlStock", ReplyAction="http://tempuri.org/IService1/UpdtControlStockResponse")]
        void UpdtControlStock(int Id_Control, int Stock_Individual, string Lote, string Fech_Vencimiento, string Fech_Ingreso, string Medicamentos_Id_Medicamento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdtControlStock", ReplyAction="http://tempuri.org/IService1/UpdtControlStockResponse")]
        System.Threading.Tasks.Task UpdtControlStockAsync(int Id_Control, int Stock_Individual, string Lote, string Fech_Vencimiento, string Fech_Ingreso, string Medicamentos_Id_Medicamento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdtDetForm", ReplyAction="http://tempuri.org/IService1/UpdtDetFormResponse")]
        void UpdtDetForm(int FORM_MEDICAMENTOS_ID_FORM, string MEDICAMENTOS_ID_MEDICAMENTO, int ID_DETALLE, string PRESCRIPCION, int CANTIDAD_ENTREGADA, string FECHA_ENTREGA, string FECHA_PROX__ENTREGA, char ESTADO_ENTREGA, string ENTREGADO_POR);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdtDetForm", ReplyAction="http://tempuri.org/IService1/UpdtDetFormResponse")]
        System.Threading.Tasks.Task UpdtDetFormAsync(int FORM_MEDICAMENTOS_ID_FORM, string MEDICAMENTOS_ID_MEDICAMENTO, int ID_DETALLE, string PRESCRIPCION, int CANTIDAD_ENTREGADA, string FECHA_ENTREGA, string FECHA_PROX__ENTREGA, char ESTADO_ENTREGA, string ENTREGADO_POR);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdtFormMedicamentos", ReplyAction="http://tempuri.org/IService1/UpdtFormMedicamentosResponse")]
        void UpdtFormMedicamentos(int ID_FORM, string FECHA_EMISION, char TIPO_TRATAMIENTO, string PACIENTE_RUT_PACIENTE, string MEDICO_RUT_USER);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdtFormMedicamentos", ReplyAction="http://tempuri.org/IService1/UpdtFormMedicamentosResponse")]
        System.Threading.Tasks.Task UpdtFormMedicamentosAsync(int ID_FORM, string FECHA_EMISION, char TIPO_TRATAMIENTO, string PACIENTE_RUT_PACIENTE, string MEDICO_RUT_USER);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdtLaboratorio", ReplyAction="http://tempuri.org/IService1/UpdtLaboratorioResponse")]
        void UpdtLaboratorio(int ID_LABORATORIO, string NOM_LABORATORIO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdtLaboratorio", ReplyAction="http://tempuri.org/IService1/UpdtLaboratorioResponse")]
        System.Threading.Tasks.Task UpdtLaboratorioAsync(int ID_LABORATORIO, string NOM_LABORATORIO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdtMedicamentos", ReplyAction="http://tempuri.org/IService1/UpdtMedicamentosResponse")]
        void UpdtMedicamentos(string ID_MEDICAMENTO, string NOMBRE, string DESCRIPCION, int CANT_UM, int STOCK_GENERAL, int STOCK_CRITICO, int UNIDAD_MEDIDA_ID_UNIDAD, int LABORATORIO_ID_LABORATORIO, int TIPO_MEDICAMENTO_ID_TIPO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdtMedicamentos", ReplyAction="http://tempuri.org/IService1/UpdtMedicamentosResponse")]
        System.Threading.Tasks.Task UpdtMedicamentosAsync(string ID_MEDICAMENTO, string NOMBRE, string DESCRIPCION, int CANT_UM, int STOCK_GENERAL, int STOCK_CRITICO, int UNIDAD_MEDIDA_ID_UNIDAD, int LABORATORIO_ID_LABORATORIO, int TIPO_MEDICAMENTO_ID_TIPO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdtMedico", ReplyAction="http://tempuri.org/IService1/UpdtMedicoResponse")]
        void UpdtMedico(string RUT_USER, string NOMBRES, string APELLIDO_PAT, string APELLIDO_MAT, string PASS);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdtMedico", ReplyAction="http://tempuri.org/IService1/UpdtMedicoResponse")]
        System.Threading.Tasks.Task UpdtMedicoAsync(string RUT_USER, string NOMBRES, string APELLIDO_PAT, string APELLIDO_MAT, string PASS);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdtMovimientosMed", ReplyAction="http://tempuri.org/IService1/UpdtMovimientosMedResponse")]
        void UpdtMovimientosMed(int ID_MOVIMIENTO, int CANTIDAD, string FECHA_MOVIMIENTO, int ID_DETALLE, int TIPO_MOVIMIENTO_ID_MOVIENTO, int CONTROL_STOCK_ID_CONTROL, string USUARIO_RUT_USER);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdtMovimientosMed", ReplyAction="http://tempuri.org/IService1/UpdtMovimientosMedResponse")]
        System.Threading.Tasks.Task UpdtMovimientosMedAsync(int ID_MOVIMIENTO, int CANTIDAD, string FECHA_MOVIMIENTO, int ID_DETALLE, int TIPO_MOVIMIENTO_ID_MOVIENTO, int CONTROL_STOCK_ID_CONTROL, string USUARIO_RUT_USER);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdtPaciente", ReplyAction="http://tempuri.org/IService1/UpdtPacienteResponse")]
        void UpdtPaciente(string RUT_PACIENTE, string NOMBRES, string APELLIDO_PAT, string APELLIDO_MAT, string SECTOR, string DIRECCION, int CELULAR, int RED_FIJA, string RUT_TUTOR);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdtPaciente", ReplyAction="http://tempuri.org/IService1/UpdtPacienteResponse")]
        System.Threading.Tasks.Task UpdtPacienteAsync(string RUT_PACIENTE, string NOMBRES, string APELLIDO_PAT, string APELLIDO_MAT, string SECTOR, string DIRECCION, int CELULAR, int RED_FIJA, string RUT_TUTOR);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdtTipoMedicamento", ReplyAction="http://tempuri.org/IService1/UpdtTipoMedicamentoResponse")]
        void UpdtTipoMedicamento(int ID_TIPO, string NOMBRE_TIPO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdtTipoMedicamento", ReplyAction="http://tempuri.org/IService1/UpdtTipoMedicamentoResponse")]
        System.Threading.Tasks.Task UpdtTipoMedicamentoAsync(int ID_TIPO, string NOMBRE_TIPO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdtTipoMovimiento", ReplyAction="http://tempuri.org/IService1/UpdtTipoMovimientoResponse")]
        void UpdtTipoMovimiento(int ID_MOVIENTO, string NOM_MOVIMIENTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdtTipoMovimiento", ReplyAction="http://tempuri.org/IService1/UpdtTipoMovimientoResponse")]
        System.Threading.Tasks.Task UpdtTipoMovimientoAsync(int ID_MOVIENTO, string NOM_MOVIMIENTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdtTutor", ReplyAction="http://tempuri.org/IService1/UpdtTutorResponse")]
        void UpdtTutor(string RUT_TUTOR, string NOMBRES, string APELLIDO_PAT, string APELLIDO_MAT, string DIRECCION, int CELULAR);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdtTutor", ReplyAction="http://tempuri.org/IService1/UpdtTutorResponse")]
        System.Threading.Tasks.Task UpdtTutorAsync(string RUT_TUTOR, string NOMBRES, string APELLIDO_PAT, string APELLIDO_MAT, string DIRECCION, int CELULAR);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdtUnidadMedida", ReplyAction="http://tempuri.org/IService1/UpdtUnidadMedidaResponse")]
        void UpdtUnidadMedida(int ID_UNIDAD, string NOMBRE_UNIDAD);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdtUnidadMedida", ReplyAction="http://tempuri.org/IService1/UpdtUnidadMedidaResponse")]
        System.Threading.Tasks.Task UpdtUnidadMedidaAsync(int ID_UNIDAD, string NOMBRE_UNIDAD);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdtUsuario", ReplyAction="http://tempuri.org/IService1/UpdtUsuarioResponse")]
        void UpdtUsuario(string Rut, string Nombres, string Ape_Pat, string Ape_Mat, string Pass, int Id_Adm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdtUsuario", ReplyAction="http://tempuri.org/IService1/UpdtUsuarioResponse")]
        System.Threading.Tasks.Task UpdtUsuarioAsync(string Rut, string Nombres, string Ape_Pat, string Ape_Mat, string Pass, int Id_Adm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsAdmin", ReplyAction="http://tempuri.org/IService1/InsAdminResponse")]
        void InsAdmin(int Id_Admin, string Cargo, string Privilegio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsAdmin", ReplyAction="http://tempuri.org/IService1/InsAdminResponse")]
        System.Threading.Tasks.Task InsAdminAsync(int Id_Admin, string Cargo, string Privilegio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsControlStock", ReplyAction="http://tempuri.org/IService1/InsControlStockResponse")]
        void InsControlStock(int Id_Control, int Stock_Individual, string Lote, string Fecha_Venc, string Fecha_Ingreso, string Medicamentos_Id_Medicamento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsControlStock", ReplyAction="http://tempuri.org/IService1/InsControlStockResponse")]
        System.Threading.Tasks.Task InsControlStockAsync(int Id_Control, int Stock_Individual, string Lote, string Fecha_Venc, string Fecha_Ingreso, string Medicamentos_Id_Medicamento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsDetForm", ReplyAction="http://tempuri.org/IService1/InsDetFormResponse")]
        void InsDetForm(int FORM_MEDICAMENTOS_ID_FORM, string MEDICAMENTOS_ID_MEDICAMENTO, int ID_DETALLE, string PRESCRIPCION, int CANTIDAD_ENTREGADA, string FECHA_ENTREGA, string FECHA_PROX__ENTREGA, char ESTADO_ENTREGA, string ENTREGADO_POR);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsDetForm", ReplyAction="http://tempuri.org/IService1/InsDetFormResponse")]
        System.Threading.Tasks.Task InsDetFormAsync(int FORM_MEDICAMENTOS_ID_FORM, string MEDICAMENTOS_ID_MEDICAMENTO, int ID_DETALLE, string PRESCRIPCION, int CANTIDAD_ENTREGADA, string FECHA_ENTREGA, string FECHA_PROX__ENTREGA, char ESTADO_ENTREGA, string ENTREGADO_POR);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsFormMedicamentos", ReplyAction="http://tempuri.org/IService1/InsFormMedicamentosResponse")]
        void InsFormMedicamentos(int ID_FORM, string FECHA_EMISION, char TIPO_TRATAMIENTO, string PACIENTE_RUT_PACIENTE, string MEDICO_RUT_USER);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsFormMedicamentos", ReplyAction="http://tempuri.org/IService1/InsFormMedicamentosResponse")]
        System.Threading.Tasks.Task InsFormMedicamentosAsync(int ID_FORM, string FECHA_EMISION, char TIPO_TRATAMIENTO, string PACIENTE_RUT_PACIENTE, string MEDICO_RUT_USER);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsLaboratorio", ReplyAction="http://tempuri.org/IService1/InsLaboratorioResponse")]
        void InsLaboratorio(int ID_LABORATORIO, string NOM_LABORATORIO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsLaboratorio", ReplyAction="http://tempuri.org/IService1/InsLaboratorioResponse")]
        System.Threading.Tasks.Task InsLaboratorioAsync(int ID_LABORATORIO, string NOM_LABORATORIO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsMedicamentos", ReplyAction="http://tempuri.org/IService1/InsMedicamentosResponse")]
        void InsMedicamentos(string ID_MEDICAMENTO, string NOMBRE, string DESCRIPCION, int CANT_UM, int STOCK_GENERAL, int STOCK_CRITICO, int UNIDAD_MEDIDA_ID_UNIDAD, int LABORATORIO_ID_LABORATORIO, int TIPO_MEDICAMENTO_ID_TIPO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsMedicamentos", ReplyAction="http://tempuri.org/IService1/InsMedicamentosResponse")]
        System.Threading.Tasks.Task InsMedicamentosAsync(string ID_MEDICAMENTO, string NOMBRE, string DESCRIPCION, int CANT_UM, int STOCK_GENERAL, int STOCK_CRITICO, int UNIDAD_MEDIDA_ID_UNIDAD, int LABORATORIO_ID_LABORATORIO, int TIPO_MEDICAMENTO_ID_TIPO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsMedico", ReplyAction="http://tempuri.org/IService1/InsMedicoResponse")]
        void InsMedico(string RUT_USER, string NOMBRES, string APELLIDO_PAT, string APELLIDO_MAT, string PASS);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsMedico", ReplyAction="http://tempuri.org/IService1/InsMedicoResponse")]
        System.Threading.Tasks.Task InsMedicoAsync(string RUT_USER, string NOMBRES, string APELLIDO_PAT, string APELLIDO_MAT, string PASS);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsMovimientosMed", ReplyAction="http://tempuri.org/IService1/InsMovimientosMedResponse")]
        void InsMovimientosMed(int ID_MOVIMIENTO, int CANTIDAD, string FECHA_MOVIMIENTO, int ID_DETALLE, int TIPO_MOVIMIENTO_ID_MOVIENTO, int CONTROL_STOCK_ID_CONTROL, string USUARIO_RUT_USER);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsMovimientosMed", ReplyAction="http://tempuri.org/IService1/InsMovimientosMedResponse")]
        System.Threading.Tasks.Task InsMovimientosMedAsync(int ID_MOVIMIENTO, int CANTIDAD, string FECHA_MOVIMIENTO, int ID_DETALLE, int TIPO_MOVIMIENTO_ID_MOVIENTO, int CONTROL_STOCK_ID_CONTROL, string USUARIO_RUT_USER);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsPaciente", ReplyAction="http://tempuri.org/IService1/InsPacienteResponse")]
        void InsPaciente(string RUT_PACIENTE, string NOMBRES, string APELLIDO_PAT, string APELLIDO_MAT, string SECTOR, string DIRECCION, int CELULAR, int RED_FIJA, string RUT_TUTOR);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsPaciente", ReplyAction="http://tempuri.org/IService1/InsPacienteResponse")]
        System.Threading.Tasks.Task InsPacienteAsync(string RUT_PACIENTE, string NOMBRES, string APELLIDO_PAT, string APELLIDO_MAT, string SECTOR, string DIRECCION, int CELULAR, int RED_FIJA, string RUT_TUTOR);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsTipoMedicamento", ReplyAction="http://tempuri.org/IService1/InsTipoMedicamentoResponse")]
        void InsTipoMedicamento(int ID_TIPO, string NOMBRE_TIPO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsTipoMedicamento", ReplyAction="http://tempuri.org/IService1/InsTipoMedicamentoResponse")]
        System.Threading.Tasks.Task InsTipoMedicamentoAsync(int ID_TIPO, string NOMBRE_TIPO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsTipoMovimiento", ReplyAction="http://tempuri.org/IService1/InsTipoMovimientoResponse")]
        void InsTipoMovimiento(int ID_MOVIENTO, string NOM_MOVIMIENTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsTipoMovimiento", ReplyAction="http://tempuri.org/IService1/InsTipoMovimientoResponse")]
        System.Threading.Tasks.Task InsTipoMovimientoAsync(int ID_MOVIENTO, string NOM_MOVIMIENTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsTutor", ReplyAction="http://tempuri.org/IService1/InsTutorResponse")]
        void InsTutor(string RUT_TUTOR, string NOMBRES, string APELLIDO_PAT, string APELLIDO_MAT, string DIRECCION, int CELULAR);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsTutor", ReplyAction="http://tempuri.org/IService1/InsTutorResponse")]
        System.Threading.Tasks.Task InsTutorAsync(string RUT_TUTOR, string NOMBRES, string APELLIDO_PAT, string APELLIDO_MAT, string DIRECCION, int CELULAR);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsUnidadMedida", ReplyAction="http://tempuri.org/IService1/InsUnidadMedidaResponse")]
        void InsUnidadMedida(int ID_UNIDAD, string NOMBRE_UNIDAD);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsUnidadMedida", ReplyAction="http://tempuri.org/IService1/InsUnidadMedidaResponse")]
        System.Threading.Tasks.Task InsUnidadMedidaAsync(int ID_UNIDAD, string NOMBRE_UNIDAD);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsUsuario", ReplyAction="http://tempuri.org/IService1/InsUsuarioResponse")]
        void InsUsuario(string Rut, string Nombres, string Ape_Pat, string Ape_Mat, string Pass, int Id_Adm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsUsuario", ReplyAction="http://tempuri.org/IService1/InsUsuarioResponse")]
        System.Threading.Tasks.Task InsUsuarioAsync(string Rut, string Nombres, string Ape_Pat, string Ape_Mat, string Pass, int Id_Adm);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : Test.wscesfm.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<Test.wscesfm.IService1>, Test.wscesfm.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string getAdmin() {
            return base.Channel.getAdmin();
        }
        
        public System.Threading.Tasks.Task<string> getAdminAsync() {
            return base.Channel.getAdminAsync();
        }
        
        public string getAdminId(int idAdmin) {
            return base.Channel.getAdminId(idAdmin);
        }
        
        public System.Threading.Tasks.Task<string> getAdminIdAsync(int idAdmin) {
            return base.Channel.getAdminIdAsync(idAdmin);
        }
        
        public string getControlStock() {
            return base.Channel.getControlStock();
        }
        
        public System.Threading.Tasks.Task<string> getControlStockAsync() {
            return base.Channel.getControlStockAsync();
        }
        
        public string getControlStockId(int idControl) {
            return base.Channel.getControlStockId(idControl);
        }
        
        public System.Threading.Tasks.Task<string> getControlStockIdAsync(int idControl) {
            return base.Channel.getControlStockIdAsync(idControl);
        }
        
        public string getDetForm() {
            return base.Channel.getDetForm();
        }
        
        public System.Threading.Tasks.Task<string> getDetFormAsync() {
            return base.Channel.getDetFormAsync();
        }
        
        public string getDetFormId(int idFormulario) {
            return base.Channel.getDetFormId(idFormulario);
        }
        
        public System.Threading.Tasks.Task<string> getDetFormIdAsync(int idFormulario) {
            return base.Channel.getDetFormIdAsync(idFormulario);
        }
        
        public string getFormMedicamentos() {
            return base.Channel.getFormMedicamentos();
        }
        
        public System.Threading.Tasks.Task<string> getFormMedicamentosAsync() {
            return base.Channel.getFormMedicamentosAsync();
        }
        
        public string getFormMedicamentosId(int idForm) {
            return base.Channel.getFormMedicamentosId(idForm);
        }
        
        public System.Threading.Tasks.Task<string> getFormMedicamentosIdAsync(int idForm) {
            return base.Channel.getFormMedicamentosIdAsync(idForm);
        }
        
        public string getLaboratorio() {
            return base.Channel.getLaboratorio();
        }
        
        public System.Threading.Tasks.Task<string> getLaboratorioAsync() {
            return base.Channel.getLaboratorioAsync();
        }
        
        public string getLaboratorioId(int idLaboratorio) {
            return base.Channel.getLaboratorioId(idLaboratorio);
        }
        
        public System.Threading.Tasks.Task<string> getLaboratorioIdAsync(int idLaboratorio) {
            return base.Channel.getLaboratorioIdAsync(idLaboratorio);
        }
        
        public string getMedicamentos() {
            return base.Channel.getMedicamentos();
        }
        
        public System.Threading.Tasks.Task<string> getMedicamentosAsync() {
            return base.Channel.getMedicamentosAsync();
        }
        
        public string getMedicamentosId(string idMedicamento) {
            return base.Channel.getMedicamentosId(idMedicamento);
        }
        
        public System.Threading.Tasks.Task<string> getMedicamentosIdAsync(string idMedicamento) {
            return base.Channel.getMedicamentosIdAsync(idMedicamento);
        }
        
        public string getMedico() {
            return base.Channel.getMedico();
        }
        
        public System.Threading.Tasks.Task<string> getMedicoAsync() {
            return base.Channel.getMedicoAsync();
        }
        
        public string getMedicoRut(string rutUser) {
            return base.Channel.getMedicoRut(rutUser);
        }
        
        public System.Threading.Tasks.Task<string> getMedicoRutAsync(string rutUser) {
            return base.Channel.getMedicoRutAsync(rutUser);
        }
        
        public string getMovimientosMed() {
            return base.Channel.getMovimientosMed();
        }
        
        public System.Threading.Tasks.Task<string> getMovimientosMedAsync() {
            return base.Channel.getMovimientosMedAsync();
        }
        
        public string getMovimientosMedId(int idMovimiento) {
            return base.Channel.getMovimientosMedId(idMovimiento);
        }
        
        public System.Threading.Tasks.Task<string> getMovimientosMedIdAsync(int idMovimiento) {
            return base.Channel.getMovimientosMedIdAsync(idMovimiento);
        }
        
        public string getPaciente() {
            return base.Channel.getPaciente();
        }
        
        public System.Threading.Tasks.Task<string> getPacienteAsync() {
            return base.Channel.getPacienteAsync();
        }
        
        public string getPacienteRut(string rutPaciente) {
            return base.Channel.getPacienteRut(rutPaciente);
        }
        
        public System.Threading.Tasks.Task<string> getPacienteRutAsync(string rutPaciente) {
            return base.Channel.getPacienteRutAsync(rutPaciente);
        }
        
        public string getTipoMedicamento() {
            return base.Channel.getTipoMedicamento();
        }
        
        public System.Threading.Tasks.Task<string> getTipoMedicamentoAsync() {
            return base.Channel.getTipoMedicamentoAsync();
        }
        
        public string getTipoMedicamentoId(int idTipoMed) {
            return base.Channel.getTipoMedicamentoId(idTipoMed);
        }
        
        public System.Threading.Tasks.Task<string> getTipoMedicamentoIdAsync(int idTipoMed) {
            return base.Channel.getTipoMedicamentoIdAsync(idTipoMed);
        }
        
        public string getTipoMovimiento() {
            return base.Channel.getTipoMovimiento();
        }
        
        public System.Threading.Tasks.Task<string> getTipoMovimientoAsync() {
            return base.Channel.getTipoMovimientoAsync();
        }
        
        public string getTipoMovimientoId(int idMoviento) {
            return base.Channel.getTipoMovimientoId(idMoviento);
        }
        
        public System.Threading.Tasks.Task<string> getTipoMovimientoIdAsync(int idMoviento) {
            return base.Channel.getTipoMovimientoIdAsync(idMoviento);
        }
        
        public string getTutor() {
            return base.Channel.getTutor();
        }
        
        public System.Threading.Tasks.Task<string> getTutorAsync() {
            return base.Channel.getTutorAsync();
        }
        
        public string getTutorRut(string rutTutor) {
            return base.Channel.getTutorRut(rutTutor);
        }
        
        public System.Threading.Tasks.Task<string> getTutorRutAsync(string rutTutor) {
            return base.Channel.getTutorRutAsync(rutTutor);
        }
        
        public string getUnidadMedida() {
            return base.Channel.getUnidadMedida();
        }
        
        public System.Threading.Tasks.Task<string> getUnidadMedidaAsync() {
            return base.Channel.getUnidadMedidaAsync();
        }
        
        public string getUnidadMedidaId(int idUnidad) {
            return base.Channel.getUnidadMedidaId(idUnidad);
        }
        
        public System.Threading.Tasks.Task<string> getUnidadMedidaIdAsync(int idUnidad) {
            return base.Channel.getUnidadMedidaIdAsync(idUnidad);
        }
        
        public string getUsuario() {
            return base.Channel.getUsuario();
        }
        
        public System.Threading.Tasks.Task<string> getUsuarioAsync() {
            return base.Channel.getUsuarioAsync();
        }
        
        public string getUsuarioRut(string rutUser) {
            return base.Channel.getUsuarioRut(rutUser);
        }
        
        public System.Threading.Tasks.Task<string> getUsuarioRutAsync(string rutUser) {
            return base.Channel.getUsuarioRutAsync(rutUser);
        }
        
        public void UpdtAdmin(int Id_Admin, string Cargo, string Privilegio) {
            base.Channel.UpdtAdmin(Id_Admin, Cargo, Privilegio);
        }
        
        public System.Threading.Tasks.Task UpdtAdminAsync(int Id_Admin, string Cargo, string Privilegio) {
            return base.Channel.UpdtAdminAsync(Id_Admin, Cargo, Privilegio);
        }
        
        public void UpdtControlStock(int Id_Control, int Stock_Individual, string Lote, string Fech_Vencimiento, string Fech_Ingreso, string Medicamentos_Id_Medicamento) {
            base.Channel.UpdtControlStock(Id_Control, Stock_Individual, Lote, Fech_Vencimiento, Fech_Ingreso, Medicamentos_Id_Medicamento);
        }
        
        public System.Threading.Tasks.Task UpdtControlStockAsync(int Id_Control, int Stock_Individual, string Lote, string Fech_Vencimiento, string Fech_Ingreso, string Medicamentos_Id_Medicamento) {
            return base.Channel.UpdtControlStockAsync(Id_Control, Stock_Individual, Lote, Fech_Vencimiento, Fech_Ingreso, Medicamentos_Id_Medicamento);
        }
        
        public void UpdtDetForm(int FORM_MEDICAMENTOS_ID_FORM, string MEDICAMENTOS_ID_MEDICAMENTO, int ID_DETALLE, string PRESCRIPCION, int CANTIDAD_ENTREGADA, string FECHA_ENTREGA, string FECHA_PROX__ENTREGA, char ESTADO_ENTREGA, string ENTREGADO_POR) {
            base.Channel.UpdtDetForm(FORM_MEDICAMENTOS_ID_FORM, MEDICAMENTOS_ID_MEDICAMENTO, ID_DETALLE, PRESCRIPCION, CANTIDAD_ENTREGADA, FECHA_ENTREGA, FECHA_PROX__ENTREGA, ESTADO_ENTREGA, ENTREGADO_POR);
        }
        
        public System.Threading.Tasks.Task UpdtDetFormAsync(int FORM_MEDICAMENTOS_ID_FORM, string MEDICAMENTOS_ID_MEDICAMENTO, int ID_DETALLE, string PRESCRIPCION, int CANTIDAD_ENTREGADA, string FECHA_ENTREGA, string FECHA_PROX__ENTREGA, char ESTADO_ENTREGA, string ENTREGADO_POR) {
            return base.Channel.UpdtDetFormAsync(FORM_MEDICAMENTOS_ID_FORM, MEDICAMENTOS_ID_MEDICAMENTO, ID_DETALLE, PRESCRIPCION, CANTIDAD_ENTREGADA, FECHA_ENTREGA, FECHA_PROX__ENTREGA, ESTADO_ENTREGA, ENTREGADO_POR);
        }
        
        public void UpdtFormMedicamentos(int ID_FORM, string FECHA_EMISION, char TIPO_TRATAMIENTO, string PACIENTE_RUT_PACIENTE, string MEDICO_RUT_USER) {
            base.Channel.UpdtFormMedicamentos(ID_FORM, FECHA_EMISION, TIPO_TRATAMIENTO, PACIENTE_RUT_PACIENTE, MEDICO_RUT_USER);
        }
        
        public System.Threading.Tasks.Task UpdtFormMedicamentosAsync(int ID_FORM, string FECHA_EMISION, char TIPO_TRATAMIENTO, string PACIENTE_RUT_PACIENTE, string MEDICO_RUT_USER) {
            return base.Channel.UpdtFormMedicamentosAsync(ID_FORM, FECHA_EMISION, TIPO_TRATAMIENTO, PACIENTE_RUT_PACIENTE, MEDICO_RUT_USER);
        }
        
        public void UpdtLaboratorio(int ID_LABORATORIO, string NOM_LABORATORIO) {
            base.Channel.UpdtLaboratorio(ID_LABORATORIO, NOM_LABORATORIO);
        }
        
        public System.Threading.Tasks.Task UpdtLaboratorioAsync(int ID_LABORATORIO, string NOM_LABORATORIO) {
            return base.Channel.UpdtLaboratorioAsync(ID_LABORATORIO, NOM_LABORATORIO);
        }
        
        public void UpdtMedicamentos(string ID_MEDICAMENTO, string NOMBRE, string DESCRIPCION, int CANT_UM, int STOCK_GENERAL, int STOCK_CRITICO, int UNIDAD_MEDIDA_ID_UNIDAD, int LABORATORIO_ID_LABORATORIO, int TIPO_MEDICAMENTO_ID_TIPO) {
            base.Channel.UpdtMedicamentos(ID_MEDICAMENTO, NOMBRE, DESCRIPCION, CANT_UM, STOCK_GENERAL, STOCK_CRITICO, UNIDAD_MEDIDA_ID_UNIDAD, LABORATORIO_ID_LABORATORIO, TIPO_MEDICAMENTO_ID_TIPO);
        }
        
        public System.Threading.Tasks.Task UpdtMedicamentosAsync(string ID_MEDICAMENTO, string NOMBRE, string DESCRIPCION, int CANT_UM, int STOCK_GENERAL, int STOCK_CRITICO, int UNIDAD_MEDIDA_ID_UNIDAD, int LABORATORIO_ID_LABORATORIO, int TIPO_MEDICAMENTO_ID_TIPO) {
            return base.Channel.UpdtMedicamentosAsync(ID_MEDICAMENTO, NOMBRE, DESCRIPCION, CANT_UM, STOCK_GENERAL, STOCK_CRITICO, UNIDAD_MEDIDA_ID_UNIDAD, LABORATORIO_ID_LABORATORIO, TIPO_MEDICAMENTO_ID_TIPO);
        }
        
        public void UpdtMedico(string RUT_USER, string NOMBRES, string APELLIDO_PAT, string APELLIDO_MAT, string PASS) {
            base.Channel.UpdtMedico(RUT_USER, NOMBRES, APELLIDO_PAT, APELLIDO_MAT, PASS);
        }
        
        public System.Threading.Tasks.Task UpdtMedicoAsync(string RUT_USER, string NOMBRES, string APELLIDO_PAT, string APELLIDO_MAT, string PASS) {
            return base.Channel.UpdtMedicoAsync(RUT_USER, NOMBRES, APELLIDO_PAT, APELLIDO_MAT, PASS);
        }
        
        public void UpdtMovimientosMed(int ID_MOVIMIENTO, int CANTIDAD, string FECHA_MOVIMIENTO, int ID_DETALLE, int TIPO_MOVIMIENTO_ID_MOVIENTO, int CONTROL_STOCK_ID_CONTROL, string USUARIO_RUT_USER) {
            base.Channel.UpdtMovimientosMed(ID_MOVIMIENTO, CANTIDAD, FECHA_MOVIMIENTO, ID_DETALLE, TIPO_MOVIMIENTO_ID_MOVIENTO, CONTROL_STOCK_ID_CONTROL, USUARIO_RUT_USER);
        }
        
        public System.Threading.Tasks.Task UpdtMovimientosMedAsync(int ID_MOVIMIENTO, int CANTIDAD, string FECHA_MOVIMIENTO, int ID_DETALLE, int TIPO_MOVIMIENTO_ID_MOVIENTO, int CONTROL_STOCK_ID_CONTROL, string USUARIO_RUT_USER) {
            return base.Channel.UpdtMovimientosMedAsync(ID_MOVIMIENTO, CANTIDAD, FECHA_MOVIMIENTO, ID_DETALLE, TIPO_MOVIMIENTO_ID_MOVIENTO, CONTROL_STOCK_ID_CONTROL, USUARIO_RUT_USER);
        }
        
        public void UpdtPaciente(string RUT_PACIENTE, string NOMBRES, string APELLIDO_PAT, string APELLIDO_MAT, string SECTOR, string DIRECCION, int CELULAR, int RED_FIJA, string RUT_TUTOR) {
            base.Channel.UpdtPaciente(RUT_PACIENTE, NOMBRES, APELLIDO_PAT, APELLIDO_MAT, SECTOR, DIRECCION, CELULAR, RED_FIJA, RUT_TUTOR);
        }
        
        public System.Threading.Tasks.Task UpdtPacienteAsync(string RUT_PACIENTE, string NOMBRES, string APELLIDO_PAT, string APELLIDO_MAT, string SECTOR, string DIRECCION, int CELULAR, int RED_FIJA, string RUT_TUTOR) {
            return base.Channel.UpdtPacienteAsync(RUT_PACIENTE, NOMBRES, APELLIDO_PAT, APELLIDO_MAT, SECTOR, DIRECCION, CELULAR, RED_FIJA, RUT_TUTOR);
        }
        
        public void UpdtTipoMedicamento(int ID_TIPO, string NOMBRE_TIPO) {
            base.Channel.UpdtTipoMedicamento(ID_TIPO, NOMBRE_TIPO);
        }
        
        public System.Threading.Tasks.Task UpdtTipoMedicamentoAsync(int ID_TIPO, string NOMBRE_TIPO) {
            return base.Channel.UpdtTipoMedicamentoAsync(ID_TIPO, NOMBRE_TIPO);
        }
        
        public void UpdtTipoMovimiento(int ID_MOVIENTO, string NOM_MOVIMIENTO) {
            base.Channel.UpdtTipoMovimiento(ID_MOVIENTO, NOM_MOVIMIENTO);
        }
        
        public System.Threading.Tasks.Task UpdtTipoMovimientoAsync(int ID_MOVIENTO, string NOM_MOVIMIENTO) {
            return base.Channel.UpdtTipoMovimientoAsync(ID_MOVIENTO, NOM_MOVIMIENTO);
        }
        
        public void UpdtTutor(string RUT_TUTOR, string NOMBRES, string APELLIDO_PAT, string APELLIDO_MAT, string DIRECCION, int CELULAR) {
            base.Channel.UpdtTutor(RUT_TUTOR, NOMBRES, APELLIDO_PAT, APELLIDO_MAT, DIRECCION, CELULAR);
        }
        
        public System.Threading.Tasks.Task UpdtTutorAsync(string RUT_TUTOR, string NOMBRES, string APELLIDO_PAT, string APELLIDO_MAT, string DIRECCION, int CELULAR) {
            return base.Channel.UpdtTutorAsync(RUT_TUTOR, NOMBRES, APELLIDO_PAT, APELLIDO_MAT, DIRECCION, CELULAR);
        }
        
        public void UpdtUnidadMedida(int ID_UNIDAD, string NOMBRE_UNIDAD) {
            base.Channel.UpdtUnidadMedida(ID_UNIDAD, NOMBRE_UNIDAD);
        }
        
        public System.Threading.Tasks.Task UpdtUnidadMedidaAsync(int ID_UNIDAD, string NOMBRE_UNIDAD) {
            return base.Channel.UpdtUnidadMedidaAsync(ID_UNIDAD, NOMBRE_UNIDAD);
        }
        
        public void UpdtUsuario(string Rut, string Nombres, string Ape_Pat, string Ape_Mat, string Pass, int Id_Adm) {
            base.Channel.UpdtUsuario(Rut, Nombres, Ape_Pat, Ape_Mat, Pass, Id_Adm);
        }
        
        public System.Threading.Tasks.Task UpdtUsuarioAsync(string Rut, string Nombres, string Ape_Pat, string Ape_Mat, string Pass, int Id_Adm) {
            return base.Channel.UpdtUsuarioAsync(Rut, Nombres, Ape_Pat, Ape_Mat, Pass, Id_Adm);
        }
        
        public void InsAdmin(int Id_Admin, string Cargo, string Privilegio) {
            base.Channel.InsAdmin(Id_Admin, Cargo, Privilegio);
        }
        
        public System.Threading.Tasks.Task InsAdminAsync(int Id_Admin, string Cargo, string Privilegio) {
            return base.Channel.InsAdminAsync(Id_Admin, Cargo, Privilegio);
        }
        
        public void InsControlStock(int Id_Control, int Stock_Individual, string Lote, string Fecha_Venc, string Fecha_Ingreso, string Medicamentos_Id_Medicamento) {
            base.Channel.InsControlStock(Id_Control, Stock_Individual, Lote, Fecha_Venc, Fecha_Ingreso, Medicamentos_Id_Medicamento);
        }
        
        public System.Threading.Tasks.Task InsControlStockAsync(int Id_Control, int Stock_Individual, string Lote, string Fecha_Venc, string Fecha_Ingreso, string Medicamentos_Id_Medicamento) {
            return base.Channel.InsControlStockAsync(Id_Control, Stock_Individual, Lote, Fecha_Venc, Fecha_Ingreso, Medicamentos_Id_Medicamento);
        }
        
        public void InsDetForm(int FORM_MEDICAMENTOS_ID_FORM, string MEDICAMENTOS_ID_MEDICAMENTO, int ID_DETALLE, string PRESCRIPCION, int CANTIDAD_ENTREGADA, string FECHA_ENTREGA, string FECHA_PROX__ENTREGA, char ESTADO_ENTREGA, string ENTREGADO_POR) {
            base.Channel.InsDetForm(FORM_MEDICAMENTOS_ID_FORM, MEDICAMENTOS_ID_MEDICAMENTO, ID_DETALLE, PRESCRIPCION, CANTIDAD_ENTREGADA, FECHA_ENTREGA, FECHA_PROX__ENTREGA, ESTADO_ENTREGA, ENTREGADO_POR);
        }
        
        public System.Threading.Tasks.Task InsDetFormAsync(int FORM_MEDICAMENTOS_ID_FORM, string MEDICAMENTOS_ID_MEDICAMENTO, int ID_DETALLE, string PRESCRIPCION, int CANTIDAD_ENTREGADA, string FECHA_ENTREGA, string FECHA_PROX__ENTREGA, char ESTADO_ENTREGA, string ENTREGADO_POR) {
            return base.Channel.InsDetFormAsync(FORM_MEDICAMENTOS_ID_FORM, MEDICAMENTOS_ID_MEDICAMENTO, ID_DETALLE, PRESCRIPCION, CANTIDAD_ENTREGADA, FECHA_ENTREGA, FECHA_PROX__ENTREGA, ESTADO_ENTREGA, ENTREGADO_POR);
        }
        
        public void InsFormMedicamentos(int ID_FORM, string FECHA_EMISION, char TIPO_TRATAMIENTO, string PACIENTE_RUT_PACIENTE, string MEDICO_RUT_USER) {
            base.Channel.InsFormMedicamentos(ID_FORM, FECHA_EMISION, TIPO_TRATAMIENTO, PACIENTE_RUT_PACIENTE, MEDICO_RUT_USER);
        }
        
        public System.Threading.Tasks.Task InsFormMedicamentosAsync(int ID_FORM, string FECHA_EMISION, char TIPO_TRATAMIENTO, string PACIENTE_RUT_PACIENTE, string MEDICO_RUT_USER) {
            return base.Channel.InsFormMedicamentosAsync(ID_FORM, FECHA_EMISION, TIPO_TRATAMIENTO, PACIENTE_RUT_PACIENTE, MEDICO_RUT_USER);
        }
        
        public void InsLaboratorio(int ID_LABORATORIO, string NOM_LABORATORIO) {
            base.Channel.InsLaboratorio(ID_LABORATORIO, NOM_LABORATORIO);
        }
        
        public System.Threading.Tasks.Task InsLaboratorioAsync(int ID_LABORATORIO, string NOM_LABORATORIO) {
            return base.Channel.InsLaboratorioAsync(ID_LABORATORIO, NOM_LABORATORIO);
        }
        
        public void InsMedicamentos(string ID_MEDICAMENTO, string NOMBRE, string DESCRIPCION, int CANT_UM, int STOCK_GENERAL, int STOCK_CRITICO, int UNIDAD_MEDIDA_ID_UNIDAD, int LABORATORIO_ID_LABORATORIO, int TIPO_MEDICAMENTO_ID_TIPO) {
            base.Channel.InsMedicamentos(ID_MEDICAMENTO, NOMBRE, DESCRIPCION, CANT_UM, STOCK_GENERAL, STOCK_CRITICO, UNIDAD_MEDIDA_ID_UNIDAD, LABORATORIO_ID_LABORATORIO, TIPO_MEDICAMENTO_ID_TIPO);
        }
        
        public System.Threading.Tasks.Task InsMedicamentosAsync(string ID_MEDICAMENTO, string NOMBRE, string DESCRIPCION, int CANT_UM, int STOCK_GENERAL, int STOCK_CRITICO, int UNIDAD_MEDIDA_ID_UNIDAD, int LABORATORIO_ID_LABORATORIO, int TIPO_MEDICAMENTO_ID_TIPO) {
            return base.Channel.InsMedicamentosAsync(ID_MEDICAMENTO, NOMBRE, DESCRIPCION, CANT_UM, STOCK_GENERAL, STOCK_CRITICO, UNIDAD_MEDIDA_ID_UNIDAD, LABORATORIO_ID_LABORATORIO, TIPO_MEDICAMENTO_ID_TIPO);
        }
        
        public void InsMedico(string RUT_USER, string NOMBRES, string APELLIDO_PAT, string APELLIDO_MAT, string PASS) {
            base.Channel.InsMedico(RUT_USER, NOMBRES, APELLIDO_PAT, APELLIDO_MAT, PASS);
        }
        
        public System.Threading.Tasks.Task InsMedicoAsync(string RUT_USER, string NOMBRES, string APELLIDO_PAT, string APELLIDO_MAT, string PASS) {
            return base.Channel.InsMedicoAsync(RUT_USER, NOMBRES, APELLIDO_PAT, APELLIDO_MAT, PASS);
        }
        
        public void InsMovimientosMed(int ID_MOVIMIENTO, int CANTIDAD, string FECHA_MOVIMIENTO, int ID_DETALLE, int TIPO_MOVIMIENTO_ID_MOVIENTO, int CONTROL_STOCK_ID_CONTROL, string USUARIO_RUT_USER) {
            base.Channel.InsMovimientosMed(ID_MOVIMIENTO, CANTIDAD, FECHA_MOVIMIENTO, ID_DETALLE, TIPO_MOVIMIENTO_ID_MOVIENTO, CONTROL_STOCK_ID_CONTROL, USUARIO_RUT_USER);
        }
        
        public System.Threading.Tasks.Task InsMovimientosMedAsync(int ID_MOVIMIENTO, int CANTIDAD, string FECHA_MOVIMIENTO, int ID_DETALLE, int TIPO_MOVIMIENTO_ID_MOVIENTO, int CONTROL_STOCK_ID_CONTROL, string USUARIO_RUT_USER) {
            return base.Channel.InsMovimientosMedAsync(ID_MOVIMIENTO, CANTIDAD, FECHA_MOVIMIENTO, ID_DETALLE, TIPO_MOVIMIENTO_ID_MOVIENTO, CONTROL_STOCK_ID_CONTROL, USUARIO_RUT_USER);
        }
        
        public void InsPaciente(string RUT_PACIENTE, string NOMBRES, string APELLIDO_PAT, string APELLIDO_MAT, string SECTOR, string DIRECCION, int CELULAR, int RED_FIJA, string RUT_TUTOR) {
            base.Channel.InsPaciente(RUT_PACIENTE, NOMBRES, APELLIDO_PAT, APELLIDO_MAT, SECTOR, DIRECCION, CELULAR, RED_FIJA, RUT_TUTOR);
        }
        
        public System.Threading.Tasks.Task InsPacienteAsync(string RUT_PACIENTE, string NOMBRES, string APELLIDO_PAT, string APELLIDO_MAT, string SECTOR, string DIRECCION, int CELULAR, int RED_FIJA, string RUT_TUTOR) {
            return base.Channel.InsPacienteAsync(RUT_PACIENTE, NOMBRES, APELLIDO_PAT, APELLIDO_MAT, SECTOR, DIRECCION, CELULAR, RED_FIJA, RUT_TUTOR);
        }
        
        public void InsTipoMedicamento(int ID_TIPO, string NOMBRE_TIPO) {
            base.Channel.InsTipoMedicamento(ID_TIPO, NOMBRE_TIPO);
        }
        
        public System.Threading.Tasks.Task InsTipoMedicamentoAsync(int ID_TIPO, string NOMBRE_TIPO) {
            return base.Channel.InsTipoMedicamentoAsync(ID_TIPO, NOMBRE_TIPO);
        }
        
        public void InsTipoMovimiento(int ID_MOVIENTO, string NOM_MOVIMIENTO) {
            base.Channel.InsTipoMovimiento(ID_MOVIENTO, NOM_MOVIMIENTO);
        }
        
        public System.Threading.Tasks.Task InsTipoMovimientoAsync(int ID_MOVIENTO, string NOM_MOVIMIENTO) {
            return base.Channel.InsTipoMovimientoAsync(ID_MOVIENTO, NOM_MOVIMIENTO);
        }
        
        public void InsTutor(string RUT_TUTOR, string NOMBRES, string APELLIDO_PAT, string APELLIDO_MAT, string DIRECCION, int CELULAR) {
            base.Channel.InsTutor(RUT_TUTOR, NOMBRES, APELLIDO_PAT, APELLIDO_MAT, DIRECCION, CELULAR);
        }
        
        public System.Threading.Tasks.Task InsTutorAsync(string RUT_TUTOR, string NOMBRES, string APELLIDO_PAT, string APELLIDO_MAT, string DIRECCION, int CELULAR) {
            return base.Channel.InsTutorAsync(RUT_TUTOR, NOMBRES, APELLIDO_PAT, APELLIDO_MAT, DIRECCION, CELULAR);
        }
        
        public void InsUnidadMedida(int ID_UNIDAD, string NOMBRE_UNIDAD) {
            base.Channel.InsUnidadMedida(ID_UNIDAD, NOMBRE_UNIDAD);
        }
        
        public System.Threading.Tasks.Task InsUnidadMedidaAsync(int ID_UNIDAD, string NOMBRE_UNIDAD) {
            return base.Channel.InsUnidadMedidaAsync(ID_UNIDAD, NOMBRE_UNIDAD);
        }
        
        public void InsUsuario(string Rut, string Nombres, string Ape_Pat, string Ape_Mat, string Pass, int Id_Adm) {
            base.Channel.InsUsuario(Rut, Nombres, Ape_Pat, Ape_Mat, Pass, Id_Adm);
        }
        
        public System.Threading.Tasks.Task InsUsuarioAsync(string Rut, string Nombres, string Ape_Pat, string Ape_Mat, string Pass, int Id_Adm) {
            return base.Channel.InsUsuarioAsync(Rut, Nombres, Ape_Pat, Ape_Mat, Pass, Id_Adm);
        }
    }
}
